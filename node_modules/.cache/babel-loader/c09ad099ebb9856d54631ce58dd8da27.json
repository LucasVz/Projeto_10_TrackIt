{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Projeto_10_TrackIt/src/components/Habito/index.js\",\n    _s = $RefreshSig$();\n\nimport Topo from \"../Topo\";\nimport Menu from \"../Menu\";\nimport styled from 'styled-components';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Loader from \"react-loader-spinner\";\nimport HabitList from \"../HabitList\";\nimport { useContext } from \"react\";\nimport UserContext from '../../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Habito() {\n  _s();\n\n  const {\n    token,\n    user\n  } = useContext(UserContext);\n  const [createHabits, setCreatHabits] = useState(\"none\");\n  const [selectedDay, setSelectedDay] = useState([]);\n  const [habitName, setHabitName] = useState('');\n  const [savedHabits, setSavedHabits] = useState(null);\n  const [opacityValue, setOpacityValue] = useState('1');\n  const [pointerEvent, setPointerEvent] = useState('fill');\n  const [botao, setBotao] = useState('salvar');\n\n  function selectDay(day) {\n    let days = Number(day.target.id);\n\n    if (selectedDay.includes(days)) {\n      const filteredDays = selectedDay.filter(batata => batata !== days);\n      setSelectedDay(filteredDays);\n      return;\n    }\n\n    setSelectedDay([...selectedDay, days]);\n    console.log(selectedDay);\n  }\n\n  function saveHabit() {\n    console.log(habitName);\n    console.log(selectedDay);\n    console.log(token);\n    const promise = axios.post('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits', {\n      name: habitName,\n      days: selectedDay\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    promise.then(response => {\n      console.log(response);\n      setOpacityValue(\"1\");\n      setPointerEvent(\"fill\");\n      setBotao(\"salvar\");\n    });\n    promise.catch(error => {\n      console.log(error);\n      setOpacityValue(\"1\");\n      setPointerEvent(\"fill\");\n      setBotao(\"salvar\");\n      alert(\"preencha todos os campos solicitados\");\n    });\n    setOpacityValue(\"0.7\");\n    setPointerEvent(\"none\");\n    setBotao( /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"ThreeDots\",\n      color: \"#FFFFFF\",\n      height: 15,\n      width: 45\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 22\n    }, this));\n    setSelectedDay([]);\n    setHabitName(\"\");\n    setCreatHabits(\"none\");\n  }\n\n  useEffect(() => {\n    const promise = axios.get('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    promise.then(response => setSavedHabits(response.data));\n    promise.catch(error => console.log(error.response));\n  }, [savedHabits]);\n\n  if (savedHabits === null) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 20\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topo, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adicionar-habitos\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Meus h\\xE1bitos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => createHabits === \"none\" ? setCreatHabits(\"list-itens\") : setCreatHabits(\"none\"),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RegisterHabits, {\n        createHabits: createHabits,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          pointer: pointerEvent,\n          opacity: opacityValue,\n          placeholder: \"nome do h\\xE1bito\",\n          type: \"text\",\n          onChange: e => setHabitName(e.target.value),\n          value: habitName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Days, {\n          pointer: pointerEvent,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: selectedDay.includes(0) && \"selected\",\n            id: \"0\",\n            onClick: selectDay,\n            children: \"D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: selectedDay.includes(1) && \"selected\",\n            id: \"1\",\n            onClick: selectDay,\n            children: \"S\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: selectedDay.includes(2) && \"selected\",\n            id: \"2\",\n            onClick: selectDay,\n            children: \"T\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: selectedDay.includes(3) && \"selected\",\n            id: \"3\",\n            onClick: selectDay,\n            children: \"Q\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: selectedDay.includes(4) && \"selected\",\n            id: \"4\",\n            onClick: selectDay,\n            children: \"Q\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: selectedDay.includes(5) && \"selected\",\n            id: \"5\",\n            onClick: selectDay,\n            children: \"S\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: selectedDay.includes(6) && \"selected\",\n            id: \"6\",\n            onClick: selectDay,\n            children: \"S\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setCreatHabits(\"none\"),\n            className: \"cancel\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonToSave, {\n            pointer: pointerEvent,\n            opacity: opacityValue,\n            onClick: saveHabit,\n            type: \"submit\",\n            children: botao\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), savedHabits.map(habits => /*#__PURE__*/_jsxDEV(HabitList, { ...habits,\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: savedHabits.length === 0 && \"Você não tem nenhum hábito cadastrado ainda. Adicione um hábito para começar a trackear!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Habito, \"5b1aH4bYPVy2bl1CmgouFSgnWco=\");\n\n_c = Habito;\nconst Container = styled.div`\n    padding:17px;\n    margin-bottom: 100px;\n    padding-top: 100px;\n    .adicionar-habitos{\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        \n        margin-bottom: 20px;\n        p{\n            font-size: 23px;\n            line-height: 29px;\n            \n            color: #126BA5;\n        }\n        button{\n            border: none;\n            width: 40px;\n            height: 35px;\n            background-color: #52B6FF;\n            border-radius: 5px;\n            \n            font-size: 27px;\n            color: #FFFFFF;\n        }\n    }\n    `;\n_c2 = Container;\nconst RegisterHabits = styled.div`\n    background: #FFFFFF;\n    border-radius: 5px;\n    padding: 19px;\n    display: ${props => props.createHabits};\n    `;\n_c3 = RegisterHabits;\nconst Input = styled.input`\n    opacity: ${props => props.opacity};\n    pointer-events: ${props => props.pointer};\n    \n    background: #FFFFFF;\n    border: 1px solid #D5D5D5;\n    width: 100%;\n    height: 45px;\n    \n    border-radius: 5px;\n    \n    font-size: 20px;\n    line-height: 25px;\n`;\n_c4 = Input;\nconst Days = styled.div`\n    margin-bottom: 30px;\n    pointer-events: ${props => props.pointer};\n    .selected{\n        background-color: #CFCFCF;\n        color: #FFFFFF;\n    }\n    `;\n_c5 = Days;\nconst Button = styled.button`\n    width: 30px;\n    height: 30px;\n    \n    background-color: #FFFFFF;\n    border: 1px solid #D5D5D5;\n    border-radius: 5px;\n    \n    font-size: 20px;\n    color: #DBDBDB;\n    \n    margin:8px 4px 0 0;\n    `;\n_c6 = Button;\nconst Buttons = styled.div`\n    display: flex;\n    justify-content: end;\n    .cancel{\n        font-size: 16px;\n        color: #52B6FF;\n        \n        border: none;\n        background-color: transparent;\n        \n        margin-right: 15px;\n    }\n    `;\n_c7 = Buttons;\nconst ButtonToSave = styled.button`\n    opacity: ${props => props.opacity};\n    pointer-events: ${props => props.pointer};\n    \n    width: 84px;\n    height: 35px;\n\n    background: #52B6FF;\n    border-radius: 5px;\n\n    font-size: 16px;\n    color: #FFFFFF;\n\n    border: none;\n`;\n_c8 = ButtonToSave;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Habito\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"RegisterHabits\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"Days\");\n$RefreshReg$(_c6, \"Button\");\n$RefreshReg$(_c7, \"Buttons\");\n$RefreshReg$(_c8, \"ButtonToSave\");","map":{"version":3,"sources":["/home/lucas/Projeto_10_TrackIt/src/components/Habito/index.js"],"names":["Topo","Menu","styled","useEffect","useState","axios","Loader","HabitList","useContext","UserContext","Habito","token","user","createHabits","setCreatHabits","selectedDay","setSelectedDay","habitName","setHabitName","savedHabits","setSavedHabits","opacityValue","setOpacityValue","pointerEvent","setPointerEvent","botao","setBotao","selectDay","day","days","Number","target","id","includes","filteredDays","filter","batata","console","log","saveHabit","promise","post","name","headers","Authorization","then","response","catch","error","alert","get","data","e","value","map","habits","length","Container","div","RegisterHabits","props","Input","input","opacity","pointer","Days","Button","button","Buttons","ButtonToSave"],"mappings":"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","sourcesContent":["import Topo from \"../Topo\";\nimport Menu from \"../Menu\";\nimport styled from 'styled-components';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Loader from \"react-loader-spinner\";\nimport HabitList from \"../HabitList\";\nimport { useContext } from \"react\";\nimport UserContext from '../../context/UserContext'\n\nexport default function Habito(){\n    const { token, user } = useContext(UserContext);\n    const [createHabits, setCreatHabits] = useState(\"none\");\n    const [selectedDay, setSelectedDay] = useState ([]);\n    const [habitName, setHabitName] = useState('');\n    const [savedHabits, setSavedHabits] = useState(null);\n\n    const [opacityValue, setOpacityValue] = useState('1');\n    const [pointerEvent, setPointerEvent] = useState('fill');\n\n    const [botao, setBotao] = useState('salvar')\n    function selectDay(day){\n        let days = Number(day.target.id);\n        if (selectedDay.includes(days)) {\n            const filteredDays = selectedDay.filter(batata => batata !== days);\n            setSelectedDay(filteredDays);\n            return;\n        }\n        setSelectedDay([...selectedDay, days]);\n        console.log(selectedDay);\n    }\n    \n    function saveHabit(){\n        console.log(habitName);\n        console.log(selectedDay);\n        console.log(token);\n        \n        const promise = axios.post('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits',{\n            name: habitName,\n            days: selectedDay},\n            { \n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            }\n        );\n            \n            promise.then (response => {\n                console.log(response);\n                setOpacityValue(\"1\");\n                setPointerEvent(\"fill\");\n                setBotao(\"salvar\");\n            });\n            \n            promise.catch (error => {\n                console.log(error);\n                setOpacityValue(\"1\");\n                setPointerEvent(\"fill\");\n                setBotao(\"salvar\");\n                alert(\"preencha todos os campos solicitados\")\n            });\n            \n            setOpacityValue(\"0.7\")\n            setPointerEvent(\"none\")\n            setBotao(<Loader type=\"ThreeDots\" color=\"#FFFFFF\" height={15} width={45}/>)\n            setSelectedDay([])\n            setHabitName(\"\")\n            setCreatHabits(\"none\")\n        }\n        \n        useEffect(() => {\n            const promise = axios.get('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits', {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            });\n            promise.then(response => setSavedHabits(response.data));\n            promise.catch(error => console.log(error.response));\n        }, [savedHabits]);\n        \n        \n        if (savedHabits === null) {\n            return <h1>Carregando...</h1>\n        }\n        \n        return(\n            <>\n            <Topo user = {user}/>\n            <Container>\n                <div className=\"adicionar-habitos\">\n                    <p>Meus hábitos</p>\n                    <button onClick={() => (createHabits === \"none\") ? setCreatHabits(\"list-itens\"): setCreatHabits(\"none\")}>+</button>\n                </div>\n                <RegisterHabits createHabits = {createHabits}>\n                    <Input pointer = {pointerEvent} opacity = {opacityValue} placeholder='nome do hábito' type=\"text\" onChange={(e) => setHabitName(e.target.value)} value={habitName} />\n                    <Days pointer = {pointerEvent}>\n                        <Button type=\"button\" className={(selectedDay.includes(0)) && \"selected\"} id=\"0\" onClick={selectDay}>D</Button>\n                        <Button type=\"button\" className={(selectedDay.includes(1)) && \"selected\"} id=\"1\" onClick={selectDay}>S</Button>\n                        <Button type=\"button\" className={(selectedDay.includes(2)) && \"selected\"} id=\"2\" onClick={selectDay}>T</Button>\n                        <Button type=\"button\" className={(selectedDay.includes(3)) && \"selected\"} id=\"3\" onClick={selectDay}>Q</Button>\n                        <Button type=\"button\" className={(selectedDay.includes(4)) && \"selected\"} id=\"4\" onClick={selectDay}>Q</Button>\n                        <Button type=\"button\" className={(selectedDay.includes(5)) && \"selected\"} id=\"5\" onClick={selectDay}>S</Button>\n                        <Button type=\"button\" className={(selectedDay.includes(6)) && \"selected\"} id=\"6\" onClick={selectDay}>S</Button>\n                    </Days>\n                    <Buttons>\n                        <button type=\"button\" onClick={() => setCreatHabits(\"none\")} className=\"cancel\">Cancelar</button>\n                        <ButtonToSave pointer = {pointerEvent} opacity = {opacityValue} onClick={saveHabit} type=\"submit\">{botao}</ButtonToSave>\n                    </Buttons>\n                </RegisterHabits>\n                {savedHabits.map( habits => (\n                    <HabitList {...habits} token = {token} />\n                ))}\n                <h1>{(savedHabits.length === 0) && \"Você não tem nenhum hábito cadastrado ainda. Adicione um hábito para começar a trackear!\"}</h1>\n            </Container>\n            <Menu></Menu>\n        </>\n    );\n}\n\n\nconst Container = styled.div`\n    padding:17px;\n    margin-bottom: 100px;\n    padding-top: 100px;\n    .adicionar-habitos{\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        \n        margin-bottom: 20px;\n        p{\n            font-size: 23px;\n            line-height: 29px;\n            \n            color: #126BA5;\n        }\n        button{\n            border: none;\n            width: 40px;\n            height: 35px;\n            background-color: #52B6FF;\n            border-radius: 5px;\n            \n            font-size: 27px;\n            color: #FFFFFF;\n        }\n    }\n    `;\n\nconst RegisterHabits = styled.div`\n    background: #FFFFFF;\n    border-radius: 5px;\n    padding: 19px;\n    display: ${props => props.createHabits};\n    `;\n\nconst Input = styled.input`\n    opacity: ${props => props.opacity};\n    pointer-events: ${props => props.pointer};\n    \n    background: #FFFFFF;\n    border: 1px solid #D5D5D5;\n    width: 100%;\n    height: 45px;\n    \n    border-radius: 5px;\n    \n    font-size: 20px;\n    line-height: 25px;\n`;\n\nconst Days = styled.div`\n    margin-bottom: 30px;\n    pointer-events: ${props => props.pointer};\n    .selected{\n        background-color: #CFCFCF;\n        color: #FFFFFF;\n    }\n    `;\n\nconst Button = styled.button`\n    width: 30px;\n    height: 30px;\n    \n    background-color: #FFFFFF;\n    border: 1px solid #D5D5D5;\n    border-radius: 5px;\n    \n    font-size: 20px;\n    color: #DBDBDB;\n    \n    margin:8px 4px 0 0;\n    `\n\nconst Buttons = styled.div`\n    display: flex;\n    justify-content: end;\n    .cancel{\n        font-size: 16px;\n        color: #52B6FF;\n        \n        border: none;\n        background-color: transparent;\n        \n        margin-right: 15px;\n    }\n    `;\n\nconst ButtonToSave = styled.button`\n    opacity: ${props => props.opacity};\n    pointer-events: ${props => props.pointer};\n    \n    width: 84px;\n    height: 35px;\n\n    background: #52B6FF;\n    border-radius: 5px;\n\n    font-size: 16px;\n    color: #FFFFFF;\n\n    border: none;\n`;"]},"metadata":{},"sourceType":"module"}