{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Projeto_10_TrackIt/src/components/CompleteHabits/index.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport button from \"../../assets/Vector.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CompleteHabits(_ref) {\n  _s();\n\n  let {\n    id,\n    name,\n    done,\n    currentSequence,\n    highestSequence,\n    token\n  } = _ref;\n  const [checkHabit, setCheckHabit] = useState('');\n  const [ifDone, setIfDone] = useState(done);\n  const [checkColor, setCheckColor] = useState(\"#EBEBEB\");\n  const [sequenceGreen, setSequenceGreen] = useState(\"\");\n\n  if (checkHabit !== '' && ifDone === false) {\n    const promise = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${checkHabit}/check`, {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    promise.then(response => {\n      console.log(response);\n    });\n    promise.catch(error => {\n      console.log(error);\n    });\n    setCheckHabit('');\n    setIfDone(true);\n    console.log(\"marquei\");\n    setCheckColor(\"#8FC549\");\n    setSequenceGreen(\"sequence-green\");\n  }\n\n  if (checkHabit !== '' && ifDone === true) {\n    const promise = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${checkHabit}/uncheck`, {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    promise.then(response => {\n      console.log(response);\n    });\n    promise.catch(error => {\n      console.log(error);\n    });\n    setCheckHabit('');\n    setIfDone(false);\n    console.log(\"desmarquei\");\n    setCheckColor(\"#EBEBEB\");\n    setSequenceGreen(\"\");\n  }\n\n  function CheckHAbit() {\n    setCheckHabit(id);\n    console.log(ifDone);\n    console.log(checkHabit);\n  }\n\n  return /*#__PURE__*/_jsxDEV(HabitCard, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-card\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sequence\",\n        children: [\"Sequ\\xEAncia atual: \", /*#__PURE__*/_jsxDEV(\"spam\", {\n          className: sequenceGreen,\n          children: [currentSequence, \" dias\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sequence\",\n        children: [\"Seu recorde: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sequence-green\",\n          children: [highestSequence, \" dias\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: CheckHAbit,\n      onLoad: () => done === true ? setSequenceGreen(\"sequence-green\") : setSequenceGreen(\"\"),\n      onLoad: () => done === true ? setCheckColor(\"#8FC549\") : setCheckColor(\"#EBEBEB\"),\n      check: checkColor,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: button,\n        alt: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 225\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CompleteHabits, \"AQOmd59Yfg2M9g1aUFW+FMIt5DE=\");\n\n_c = CompleteHabits;\nconst HabitCard = styled.div`\n    width: 340px;\n    height: 94px;\n\n    background: #FFFFFF;\n    border-radius: 5px; \n    margin-bottom: 10px;\n    padding: 13px;\n    \n    display: flex;\n    justify-content: space-between;\n    .title-card{\n        font-size: 20px;\n        line-height: 25px;\n\n        color: #666666;\n        margin-bottom: 7px;\n    }\n    .sequence{\n        font-size: 13px;\n        line-height: 16px;\n\n        color: #666666;\n    }\n    .sequence-green{\n        color: #8FC549;\n    }\n\n`;\n_c2 = HabitCard;\nconst Button = styled.button`\n    border: none;\n    border-radius: 5px;\n\n    width: 69px;\n    height: 69px;\n\n    background-color: ${props => props.check};\n`;\n_c3 = Button;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CompleteHabits\");\n$RefreshReg$(_c2, \"HabitCard\");\n$RefreshReg$(_c3, \"Button\");","map":{"version":3,"sources":["/home/lucas/Projeto_10_TrackIt/src/components/CompleteHabits/index.js"],"names":["styled","axios","useState","button","CompleteHabits","id","name","done","currentSequence","highestSequence","token","checkHabit","setCheckHabit","ifDone","setIfDone","checkColor","setCheckColor","sequenceGreen","setSequenceGreen","promise","post","headers","Authorization","then","response","console","log","catch","error","CheckHAbit","HabitCard","div","Button","props","check"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport button from \"../../assets/Vector.png\"\n\n\nexport default function CompleteHabits({id, name, done, currentSequence, highestSequence, token}){\n    const [checkHabit, setCheckHabit] = useState('')\n    const [ifDone, setIfDone] = useState(done)\n    const [checkColor, setCheckColor] = useState(\"#EBEBEB\")\n    const [sequenceGreen, setSequenceGreen] = useState(\"\")\n        \n    if(checkHabit !== '' && ifDone === false){\n    const promise = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${checkHabit}/check`,{},\n        { \n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }\n        \n    );\n    promise.then (response => {\n        console.log(response);\n    });\n    \n    promise.catch (error => {\n        console.log(error);\n    });\n    setCheckHabit('')\n    setIfDone(true)\n    console.log(\"marquei\")\n    setCheckColor(\"#8FC549\")\n    setSequenceGreen(\"sequence-green\")\n    }\n    if(checkHabit !== '' && ifDone === true){\n        const promise = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${checkHabit}/uncheck`,{},\n        { \n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }\n        \n    );\n    promise.then (response => {\n        console.log(response);\n    });\n    \n    promise.catch (error => {\n        console.log(error);\n    });\n    setCheckHabit('')\n    setIfDone(false)\n    console.log(\"desmarquei\")\n    setCheckColor(\"#EBEBEB\")\n    setSequenceGreen(\"\")\n    }\n    \n    function CheckHAbit(){\n        setCheckHabit(id);\n        console.log(ifDone);\n        console.log(checkHabit);\n    }\n\n    return(\n    <HabitCard>\n        <div>\n            <p className='title-card'>{name}</p>\n            <p className='sequence'>Sequência atual: <spam className={sequenceGreen}>{currentSequence} dias</spam></p>\n            <p className='sequence'>Seu recorde: <span className='sequence-green'>{highestSequence} dias</span></p>\n        </div>\n        <Button onClick={CheckHAbit} onLoad={()=>(done === true)? setSequenceGreen(\"sequence-green\"):setSequenceGreen(\"\")} onLoad={()=>(done === true)? setCheckColor(\"#8FC549\"):setCheckColor(\"#EBEBEB\")} check = {checkColor}><img src={button} alt='button'/></Button>\n    </HabitCard>\n    )\n}\n\nconst HabitCard = styled.div`\n    width: 340px;\n    height: 94px;\n\n    background: #FFFFFF;\n    border-radius: 5px; \n    margin-bottom: 10px;\n    padding: 13px;\n    \n    display: flex;\n    justify-content: space-between;\n    .title-card{\n        font-size: 20px;\n        line-height: 25px;\n\n        color: #666666;\n        margin-bottom: 7px;\n    }\n    .sequence{\n        font-size: 13px;\n        line-height: 16px;\n\n        color: #666666;\n    }\n    .sequence-green{\n        color: #8FC549;\n    }\n\n`\nconst Button = styled.button`\n    border: none;\n    border-radius: 5px;\n\n    width: 69px;\n    height: 69px;\n\n    background-color: ${props => props.check};\n`\n"]},"metadata":{},"sourceType":"module"}